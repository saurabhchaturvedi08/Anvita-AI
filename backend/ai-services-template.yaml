AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.11
    Timeout: 10

Parameters:
  S3BucketName:
    Type: String
    Description: "Name of the existing S3 bucket"
  OpenSearchDomain:
    Type: String
    Default: "anvita-vector-search"

Resources:
  # OpenSearch Domain for Vector Storage
  OpenSearchDomain:
    Type: AWS::Elasticsearch::Domain
    Properties:
      DomainName: !Ref OpenSearchDomain
      ElasticsearchVersion: "7.10"
      ClusterConfig:
        InstanceType: "t3.small.elasticsearch"
        InstanceCount: 1
      EBSOptions:
        EBSEnabled: true
        VolumeType: "gp2"
        VolumeSize: 10
      AccessPolicies:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: "*"
            Action: "es:*"
            Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${OpenSearchDomain}/*"
      EncryptionAtRestOptions:
        Enabled: true
      NodeToNodeEncryptionOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: "Policy-Min-TLS-1-0-2019-07"

  EmbedTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: embedding_handler.lambda_handler
      CodeUri: src/embedding_handler/
      Runtime: python3.11
      Timeout: 60
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3BucketName
          BEDROCK_EMBEDDING_MODEL: "amazon.titan-embed-text-v1"
          BEDROCK_LLM_MODEL: "anthropic.claude-3-sonnet-20240229-v1:0"
          OPENSEARCH_HOST: !Sub "${OpenSearchDomain}.${AWS::Region}.es.amazonaws.com"
          OPENSEARCH_INDEX: "documents"
          OPENSEARCH_USER: "admin"
          OPENSEARCH_PASS: "admin"
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3BucketName
        - Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: "*"
      Events:
        S3TextUpload:
          Type: S3
          Properties:
            Bucket: !Ref S3BucketName
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: texts/
                  - Name: suffix
                    Value: .txt

  QALambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: query_handler.lambda_handler
      CodeUri: src/query_handler/
      Runtime: python3.11
      Timeout: 30
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3BucketName
          BEDROCK_EMBEDDING_MODEL: "amazon.titan-embed-text-v1"
          BEDROCK_LLM_MODEL: "anthropic.claude-3-sonnet-20240229-v1:0"
          OPENSEARCH_HOST: !Sub "${OpenSearchDomain}.${AWS::Region}.es.amazonaws.com"
          OPENSEARCH_INDEX: "documents"
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref S3BucketName
        - Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: "*"
      Events:
        QAApi:
          Type: Api
          Properties:
            Path: /qa
            Method: post

  SummarizeLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: summarizer.lambda_handler
      CodeUri: src/summarizer_handler/
      Runtime: python3.11
      Timeout: 30
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3BucketName
          BEDROCK_LLM_MODEL: "anthropic.claude-3-sonnet-20240229-v1:0"
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref S3BucketName
        - Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: "*"
      Events:
        SummarizeApi:
          Type: Api
          Properties:
            Path: /summarize
            Method: get

Outputs:
  OpenSearchEndpoint:
    Description: "OpenSearch Domain Endpoint"
    Value: !Sub "https://${OpenSearchDomain}.${AWS::Region}.es.amazonaws.com"
  QAApiUrl:
    Description: "QA API Endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/qa"
  SummarizeApiUrl:
    Description: "Summarize API Endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/summarize" 