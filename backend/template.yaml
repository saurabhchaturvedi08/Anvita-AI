AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.11
    Timeout: 10

Parameters:
  S3Bucket:
    Type: String
  MaxFileSizeMB:
    Type: Number
    Default: 10
  AllowedFileTypes:
    Type: String
    # Supported: PDF, DOCX, DOC, TXT, RTF, ODT
    Default: image/jpeg,image/png,application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/msword,text/plain,application/rtf,application/vnd.oasis.opendocument.text


Resources:
  # S3 Bucket for file storage
  # S3Bucket:
    # Type: AWS::S3::Bucket
    # Properties:
    #   BucketName: !Ref BucketName
    #   PublicAccessBlockConfiguration:
    #     BlockPublicAcls: true
    #     BlockPublicPolicy: true
    #     IgnorePublicAcls: true
    #     RestrictPublicBuckets: true
    #   CorsConfiguration:
    #     CorsRules:
    #       - AllowedHeaders: ['*']
    #         AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
    #         AllowedOrigins: ['*']
    #         MaxAge: 3000

  S3DocumentUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      CodeUri: src/upload_handler/ 
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3Bucket
          MAX_FILE_SIZE_MB: !Ref MaxFileSizeMB
          ALLOWED_FILE_TYPES: !Ref AllowedFileTypes
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
      Events:
        UploadApi:
          Type: Api
          Properties:
            Path: /generate-upload-url
            Method: post

  ExtractTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: extract_loader.lambda_handler
      CodeUri: src/extract_loader/
      Runtime: python3.11
      Timeout: 30
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3Bucket
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
        - Statement:
            - Effect: Allow
              Action:
                - es:ESHttpGet
                - es:ESHttpPost
                - es:ESHttpPut
                - es:ESHttpDelete

      # Layers:
      #   # Tesseract OCR Lambda Layer (region-agnostic)
      #   - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:tesseract-ocr:1"
      # Events:
      #   S3DocumentUpload:
      #     Type: S3
      #     Properties:
      #       Bucket: !Ref S3Bucket
      #       Events: s3:ObjectCreated:*
      #       Filter:
      #         S3Key:
      #           Rules:
      #             - Name: prefix
      #               Value: uploads/
      #             - Name: suffix
      #               Value: .pdf
      #             - Name: suffix
      #               Value: .docx
      #             - Name: suffix
      #               Value: .doc
      #             - Name: suffix
      #               Value: .txt
      #             - Name: suffix
      #               Value: .rtf
      #             - Name: suffix
      #               Value: .odt

  EmbedTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: embedding_handler.lambda_handler
      CodeUri: src/embedding_handler/
      Runtime: python3.11
      Timeout: 60
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3Bucket
          BEDROCK_EMBEDDING_MODEL: "amazon.titan-embed-text-v1"
          BEDROCK_LLM_MODEL: "anthropic.claude-3-sonnet-20240229-v1:0"
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket

      # Events:
      #   S3TextUpload:
      #     Type: S3
      #     Properties:
      #       Bucket: !Ref S3Bucket
      #       Events: s3:ObjectCreated:*
      #       Filter:
      #         S3Key:
      #           Rules:
      #             - Name: prefix
      #               Value: texts/
      #             - Name: suffix
      #               Value: .txt

  QALambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: query_handler.lambda_handler
      CodeUri: src/query_handler/
      Runtime: python3.11
      Timeout: 30
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3Bucket
          BEDROCK_EMBEDDING_MODEL: "amazon.titan-embed-text-v1"
          BEDROCK_LLM_MODEL: "anthropic.claude-3-sonnet-20240229-v1:0"
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref S3Bucket
      Events:
        QAApi:
          Type: Api
          Properties:
            Path: /qa
            Method: post

  SummarizeLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: summarizer.lambda_handler
      CodeUri: src/summarizer_handler/
      Runtime: python3.11
      Timeout: 30
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3Bucket
          BEDROCK_EMBEDDING_MODEL: "amazon.titan-embed-text-v1"
          BEDROCK_LLM_MODEL: "anthropic.claude-3-sonnet-20240229-v1:0"
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref S3Bucket

      Events:
        SummarizeApi:
          Type: Api
          Properties:
            Path: /summarize
            Method: get

Outputs:
  UploadApiUrl:
    Description: "API Endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate-upload-url"
  S3BucketName:
    Description: "S3 Bucket Name"
    Value: !Ref S3Bucket

